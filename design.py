import os
from PyQt5.QtWidgets import (QMainWindow, QPushButton, QVBoxLayout, QDialog, 
                            QLabel, QFrame, QApplication, QScrollArea, QWidget, QMessageBox, QHBoxLayout, QLineEdit, QTextEdit, QListWidget)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon, QPixmap
from functionality import Functionality
from Task import Task
from PIL import Image
from Team import Team
from datetime import datetime



class Window(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏")
        
        # 1. –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Functionality
        from functionality import Functionality
        self.func = Functionality(self)
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –∏ –≥–ª–∞–≤–Ω—ã–π layout
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        main_layout = QHBoxLayout(central_widget)
        
        # 3. –°–æ–∑–¥–∞–µ–º –ª–µ–≤—É—é –ø–∞–Ω–µ–ª—å
        left_panel = QVBoxLayout()
        
        # 4. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.create_user_panel()
        left_panel.addWidget(self.user_panel)
        
        # 5. –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_buttons = QVBoxLayout()
        self.create_nav_buttons(nav_buttons)
        left_panel.addLayout(nav_buttons)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç
        left_panel.addStretch()
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å
        right_panel = QVBoxLayout()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label = QLabel("–ú–æ–∏ –∑–∞–¥–∞—á–∏")
        self.title_label.setStyleSheet("""
            QLabel {
                font-size: 18px;
                font-weight: bold;
                padding: 10px;
            }
        """)
        right_panel.addWidget(self.title_label)
        
        # –°–æ–∑–¥–∞–µ–º –æ–±–ª–∞—Å—Ç—å –¥–ª—è –∑–∞–¥–∞—á —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setStyleSheet("""
            QScrollArea {
                border: none;
                background-color: white;
            }
        """)
        
        self.tasks_widget = QWidget()
        self.tasks_layout = QVBoxLayout(self.tasks_widget)
        self.tasks_layout.addStretch()
        scroll_area.setWidget(self.tasks_widget)
        
        right_panel.addWidget(scroll_area)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–∏–∂–Ω—é—é –ø–∞–Ω–µ–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏
        bottom_panel = QHBoxLayout()
        bottom_panel.addStretch()  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç —Å–ª–µ–≤–∞
        
        # 5. –°–æ–∑–¥–∞–µ–º –º–∞–ª–µ–Ω—å–∫—É—é –∫–Ω–æ–ø–∫—É –∑–∞–¥–∞—á–∏
        self.create_task_button()
        bottom_panel.addWidget(self.task_button)
        
        right_panel.addLayout(bottom_panel)

        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª–∏ –≤ –≥–ª–∞–≤–Ω—ã–π layout
        main_layout.addLayout(left_panel, 1)
        main_layout.addLayout(right_panel, 4)
        
        self.showMaximized()

    def create_nav_buttons(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""

        spacer = QWidget()
        spacer.setFixedHeight(200)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É 150 –ø—É–Ω–∫—Ç–æ–≤
    
        layout.addWidget(spacer)
        buttons = [
            ("–í—Ö–æ–¥—è—â–∏–µ", self.func.click_input_button),
            ("–ö–∞–ª–µ–Ω–¥–∞—Ä—å", self.func.click_calendar_button),
            ("–ë—ç–∫–ª–æ–≥", self.func.click_backlog_button),
            ("–ö–æ–º–∞–Ω–¥—ã", self.func.click_teams_button)
        ]
        
        for text, handler in buttons:
            btn = QPushButton(text)
            btn.setStyleSheet(self.style_button())
            btn.clicked.connect(handler)
            layout.addWidget(btn)

    def create_filters(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –∑–∞–¥–∞—á"""
        filters = ["–í—Å–µ –∑–∞–¥–∞—á–∏", "–ê–∫—Ç–∏–≤–Ω—ã–µ", "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ"]
        for filter_name in filters:
            btn = QPushButton(filter_name)
            btn.setStyleSheet("""
                QPushButton {
                    background-color: #f0f0f0;
                    border: none;
                    padding: 5px 10px;
                    border-radius: 3px;
                }
                QPushButton:hover {
                    background-color: #e0e0e0;
                }
            """)
            layout.addWidget(btn)
        
        layout.addStretch()

    # –ú–µ—Ç–æ–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í—Ö–æ–¥—è—â–∏–µ"
    def input_button(self):
        button = QPushButton("–í—Ö–æ–¥—è—â–∏–µ", self)
        button.setGeometry(20, 200, 120, 30)
        button.clicked.connect(self.func.click_input_button)
        button.setStyleSheet(self.style_button())

    # –ú–µ—Ç–æ–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"
    def calendar_button(self):
        button = QPushButton("–ö–∞–ª–µ–Ω–¥–∞—Ä—å", self)
        button.setGeometry(20, 250, 120, 30)
        button.clicked.connect(self.func.click_calendar_button)
        button.setStyleSheet(self.style_button())

    # –ú–µ—Ç–æ–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ë—ç–∫–ª–æ–≥"
    def backlog_button(self):
        button = QPushButton("–ë—ç–∫–ª–æ–≥", self)
        button.setGeometry(20, 300, 120, 30)
        button.clicked.connect(self.func.click_backlog_button)
        button.setStyleSheet(self.style_button())

    # –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
    # def create_project_block(self):
    #     project_block = QFrame(self)
    #     project_block.setGeometry(20, 460, 250, 450)
    #     project_block.setFrameShape(QFrame.StyledPanel)
    #     project_block.setStyleSheet("background-color: #f0f0f0; border: 2px solid #4CAF50;")
    #     layout = QVBoxLayout()

    #     # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    #     self.project_list_area = QScrollArea(self)
    #     self.project_list_area.setWidgetResizable(True)
    #     self.project_list_widget = QWidget()
    #     self.project_list_layout = QVBoxLayout()
    #     self.project_list_widget.setLayout(self.project_list_layout)
    #     self.project_list_area.setWidget(self.project_list_widget)

    #     layout.addWidget(self.project_list_area)

    #     # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    #     self.projects_label = QLabel("–ü—Ä–æ–µ–∫—Ç—ã:")
    #     layout.addWidget(self.projects_label)

    #     button = QPushButton("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", self)

    #     layout.addWidget(button)

    #     project_block.setLayout(layout)

    #     # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ layout –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    #     self.project_list_layout = self.project_list_layout

    #     # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
    #     self.func.update_projects()
    


    def create_task_button(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏"""
        self.task_button = QPushButton("–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞", self)
        self.task_button.setFixedSize(120, 30)  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏
        self.task_button.clicked.connect(self.func.clicked_create_task)
        self.task_button.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border: none;
                border-radius: 5px;
                padding: 5px 10px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
        """)
        


    # –°—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏
    def style_button(self):
        return """
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 5px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
        """

    def create_user_panel(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.user_panel = QFrame()
        self.user_panel.setStyleSheet("""
            QFrame {
                background-color: white;
                border: 1px solid #ddd;
                border-radius: 5px;
                margin: 5px;
                padding: 10px;
            }
        """)
        
        user_layout = QVBoxLayout(self.user_panel)
        
        # –ò–∫–æ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        icon_label = QLabel()
        icon_path = "icons_team/user.pnjyb g"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∫–æ–Ω–∫–∏
        if os.path.exists(icon_path):
            icon_pixmap = QPixmap(icon_path)
            if not icon_pixmap.isNull():
                icon_pixmap = icon_pixmap.scaled(48, 48, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                icon_label.setPixmap(icon_pixmap)
        else:
            print(f"–ò–∫–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {icon_path}")
            icon_label.setText("üë§")
            icon_label.setStyleSheet("""
                QLabel {
                    font-size: 32px;
                    color: #666;
                }
            """)
        
        icon_label.setAlignment(Qt.AlignCenter)
        user_layout.addWidget(icon_label)
        
        # –ú–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.user_label = QLabel("–ì–æ—Å—Ç—å")
        self.user_label.setStyleSheet("""
            QLabel {
                color: #333;
                font-size: 14px;
                font-weight: bold;
                padding: 5px;
            }
        """)
        self.user_label.setAlignment(Qt.AlignCenter)
        user_layout.addWidget(self.user_label)
        
        # –ú–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è email
        self.email_label = QLabel("")
        self.email_label.setStyleSheet("""
            QLabel {
                color: #666;
                font-size: 12px;
                padding: 2px;
            }
        """)
        self.email_label.setAlignment(Qt.AlignCenter)
        user_layout.addWidget(self.email_label)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
        line = QFrame()
        line.setFrameShape(QFrame.HLine)
        line.setFrameShadow(QFrame.Sunken)
        line.setStyleSheet("background-color: #ddd;")
        user_layout.addWidget(line)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞/–≤—ã—Ö–æ–¥–∞
        self.login_button = QPushButton("–í–æ–π—Ç–∏")
        self.login_button.setStyleSheet(self.style_button())
        self.login_button.clicked.connect(self.handle_auth)
        user_layout.addWidget(self.login_button)
        
        user_layout.addStretch()

    def update_user_panel(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if self.func.is_authenticated():
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user = self.func.get_current_user()
            self.user_label.setText(user['username'])
            self.email_label.setText(user['email'])
            self.email_label.setVisible(True)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
            self.login_button.setText("–í—ã–π—Ç–∏")
            try:
                self.login_button.clicked.disconnect()
            except:
                pass
            self.login_button.clicked.connect(self.handle_logout)
        else:
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–≥–æ—Å—Ç—å"
            self.user_label.setText("–ì–æ—Å—Ç—å")
            self.email_label.setText("")
            self.email_label.setVisible(False)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
            self.login_button.setText("–í–æ–π—Ç–∏")
            try:
                self.login_button.clicked.disconnect()
            except:
                pass
            self.login_button.clicked.connect(self.handle_auth)

    def handle_auth(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É"""
        self.func.show_login_window()

    def handle_logout(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
        try:
            self.func.logout()
            self.update_user_panel()
            # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
            for i in reversed(range(self.tasks_layout.count())): 
                widget = self.tasks_layout.itemAt(i).widget()
                if widget is not None:
                    widget.deleteLater()
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            self.title_label.setText("–ú–æ–∏ –∑–∞–¥–∞—á–∏")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ: {str(e)}")
            import traceback
            traceback.print_exc()

    def logout(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
        self.func.logout()
        self.func.show_login_window()
        self.update_user_panel()

#     def setup_teams_tab(self):
#         teams_widget = QWidget()
#         layout = QVBoxLayout()
        
#         # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
#         create_team_btn = QPushButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É")
#         create_team_btn.clicked.connect(self.show_create_team_dialog)
#         layout.addWidget(create_team_btn)
        
#         # –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
#         self.teams_list = QListWidget()
#         self.teams_list.itemClicked.connect(self.on_team_selected)
#         layout.addWidget(self.teams_list)
        
#         teams_widget.setLayout(layout)
#         self.tab_widget.addTab(teams_widget, "–ö–æ–º–∞–Ω–¥—ã")
        
#         # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
#         self.update_teams_list()
    
    def show_create_team_dialog(self):
        dialog = CreateTeamDialog(self)
        if dialog.exec_() == QDialog.Accepted:
            team_name = dialog.name_edit.text()
            team_description = dialog.description_edit.toPlainText()
            
            if team_name:
                team = Team(team_name, team_description)
                team_id = self.func.db.create_team(team)
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–∞–∫ –∞–¥–º–∏–Ω–∞
                self.func.db.add_team_member(team_id, self.func.current_user_id, 'admin')
                self.update_teams_list()
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ö–æ–º–∞–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
    
    def update_teams_list(self):
        self.teams_list.clear()
        teams = self.func.db.get_all_teams()
        for team in teams:
            self.teams_list.addItem(f"{team[1]} (–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {team[3]})")
            self.teams_list.item(self.teams_list.count() - 1).setData(Qt.UserRole, team[0])
    
    def on_team_selected(self, item):
        team_id = item.data(Qt.UserRole)
        team_members = self.func.db.get_team_members(team_id)
        
        dialog = QDialog(self)
        dialog.setWindowTitle("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π")
        layout = QVBoxLayout()
        
        # –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        members_label = QLabel("–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã:")
        layout.addWidget(members_label)
        
        members_list = QListWidget()
        for member in team_members:
            members_list.addItem(f"{member[1]} ({member[2]})")
        layout.addWidget(members_list)
        
        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        invite_btn = QPushButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        invite_btn.clicked.connect(lambda: self.show_invite_dialog(team_id))
        layout.addWidget(invite_btn)
        
        dialog.setLayout(layout)
        dialog.exec_()
    
    def show_invite_dialog(self):
        if not self.teams_list.currentItem():
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É!")
            return
        
        team_id = self.teams_list.currentItem().data(Qt.UserRole)
        
        dialog = QDialog(self)
        dialog.setWindowTitle("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
        layout = QVBoxLayout()
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ email
        email_input = QLineEdit()
        email_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        layout.addWidget(email_input)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()
        invite_btn = QPushButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å")
        cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")
        buttons_layout.addWidget(invite_btn)
        buttons_layout.addWidget(cancel_btn)
        layout.addLayout(buttons_layout)
        
        dialog.setLayout(layout)
        
        def invite_user():
            email = email_input.text().strip()
            if not email:
                QMessageBox.warning(dialog, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                return
            
            user = self.func.db.get_user_by_email(email, team_id)
            if user is None:
                QMessageBox.warning(dialog, "–û—à–∏–±–∫–∞", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–æ–º–∞–Ω–¥–µ")
                return
            
            if self.func.db.invite_user_to_team(user[0], team_id):
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–∞–Ω–¥—É!")
                self.update_teams_list()
                dialog.accept()
            else:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–∞–Ω–¥—É")
        
        invite_btn.clicked.connect(invite_user)
        cancel_btn.clicked.connect(dialog.reject)
        
        dialog.exec_()

    def display_project_tasks(self, project_id, project_name):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø—Ä–æ–µ–∫—Ç–∞"""
        print(f"\n=== –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–¥–∞—á –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {project_name} (ID: {project_id}) ===")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π layout
        for i in reversed(range(self.tasks_layout.count())): 
            widget = self.tasks_layout.itemAt(i).widget()
            if widget is not None:
                widget.deleteLater()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label.setText(f"–ó–∞–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞: {project_name}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞
        tasks = self.func.db.get_project_tasks(project_id)
        print(f"–ü–æ–ª—É—á–µ–Ω–æ –∑–∞–¥–∞—á: {len(tasks)}")
        
        if tasks:
            print("–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–¥–∞—á")
            for task in tasks:
                print(f"\n–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏: {task.title}")
                task_widget = QFrame()
                task_widget.setStyleSheet("""
                    QFrame {
                        background-color: white;
                        border: 1px solid #ddd;
                        border-radius: 5px;
                        margin: 5px;
                        padding: 10px;
                    }
                """)
                
                task_layout = QVBoxLayout(task_widget)
                
                # –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
                task_name = QLabel(task.title)
                task_name.setStyleSheet("font-weight: bold;")
                task_layout.addWidget(task_name)
                
                # –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
                if task.description:
                    task_desc = QLabel(task.description)
                    task_layout.addWidget(task_desc)
                
                # –î–µ–¥–ª–∞–π–Ω
                if task.deadline:
                    deadline_label = QLabel(f"–î–µ–¥–ª–∞–π–Ω: {task.deadline}")
                    task_layout.addWidget(deadline_label)
                
                self.tasks_layout.addWidget(task_widget)
                print(f"–ó–∞–¥–∞—á–∞ {task.title} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ layout")
        else:
            print("–ó–∞–¥–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ")
            # –ï—Å–ª–∏ –∑–∞–¥–∞—á –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            no_tasks_label = QLabel("–í —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á")
            no_tasks_label.setAlignment(Qt.AlignCenter)
            no_tasks_label.setStyleSheet("""
                QLabel {
                    color: #666;
                    padding: 20px;
                    font-size: 14px;
                }
            """)
            self.tasks_layout.addWidget(no_tasks_label)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü
        self.tasks_layout.addStretch()
        print("=== –ó–∞–≤–µ—Ä—à–µ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–¥–∞—á ===\n")

    def update_select_team_button(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã"""
        if self.func.is_authenticated() and self.func.get_current_team():
            team = self.func.get_current_team()
            self.select_team_button.setText(f"–ö–æ–º–∞–Ω–¥–∞: {team['name']}")
        else:
            self.select_team_button.setText("–í—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É")

    def clear_team_photo(self):
        # –û—á–∏—â–∞–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ
        self.team_photo_path = ""
        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        self.photo_preview_label.clear()
        # –ú–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–ª–∏ –∏–∫–æ–Ω–∫—É
        self.photo_preview_label.setText("–§–æ—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ")

class CreateTeamDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã")
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
        self.name_edit = QLineEdit()
        self.name_edit.setPlaceholderText("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã")
        layout.addWidget(self.name_edit)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
        self.description_edit = QTextEdit()
        self.description_edit.setPlaceholderText("–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã")
        layout.addWidget(self.description_edit)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()
        self.create_button = QPushButton("–°–æ–∑–¥–∞—Ç—å")
        self.cancel_button = QPushButton("–û—Ç–º–µ–Ω–∞")
        buttons_layout.addWidget(self.create_button)
        buttons_layout.addWidget(self.cancel_button)
        
        layout.addLayout(buttons_layout)

        self.setLayout(layout)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.create_button.clicked.connect(self.accept)
        self.cancel_button.clicked.connect(self.reject)

class InviteUserDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        self.setup_ui()

    def setup_ui(self):
        layout = QVBoxLayout()
        
        self.username_edit = QLineEdit()
        self.username_edit.setPlaceholderText("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        layout.addWidget(self.username_edit)
        
        buttons_layout = QHBoxLayout()
        self.invite_button = QPushButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å")
        self.cancel_button = QPushButton("–û—Ç–º–µ–Ω–∞")
        buttons_layout.addWidget(self.invite_button)
        buttons_layout.addWidget(self.cancel_button)
        
        layout.addLayout(buttons_layout)
        self.setLayout(layout)
        
        self.invite_button.clicked.connect(self.accept)
        self.cancel_button.clicked.connect(self.reject)
